{"ast":null,"code":"\n\n// import \"./List.css\";\n// import Navbar from \"../../components/navbar/Navbar\";\n// import Header from \"../../components/header/Header\";\n// import { useLocation } from \"react-router-dom\";\n// import { useState } from \"react\";\n// import { format } from \"date-fns\";\n// import { DateRange } from \"react-date-range\";\n// import SearchItem from \"../../components/searchItem/SearchItem\";\n// import useFetch from \"../../hooks/useFetch\";\n\n// const List = () => {\n//   const location = useLocation();\n//   const [destination, setDestination] = useState(location.state.destination);\n//   const [dates, setDates] = useState(location.state.dates);\n//   const [openDate, setOpenDate] = useState(false);\n//   const [options, setOptions] = useState(location.state.options);\n//   const [min, setMin] = useState(undefined);\n//   const [max, setMax] = useState(undefined);\n\n//   const { data, loading, error, reFetch } = useFetch(\n//     `/spaces?type=${destination}&min=${min || 1}&max=${max || 200}`\n//   );\n\n//   const handleClick = () => {\n//     reFetch();\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <Header type=\"list\" />\n//       <div className=\"listContainer\">\n//         <div className=\"listWrapper\">\n//           <div className=\"listSearch\">\n//             <h1 className=\"lsTitle\">Search</h1>\n//             <div className=\"lsItem\">\n//               <label>Destination</label>\n//               <input placeholder={destination} type=\"text\" />\n//             </div>\n//             <div className=\"lsItem\">\n//               <label>Check-in Date</label>\n//               <span onClick={() => setOpenDate(!openDate)}>{`${format(\n//                 dates[0].startDate,\n//                 \"MM/dd/yyyy\"\n//               )} to ${format(dates[0].endDate, \"MM/dd/yyyy\")}`}</span>\n//               {openDate && (\n//                 <DateRange\n//                   onChange={(item) => setDates([item.selection])}\n//                   minDate={new Date()}\n//                   ranges={dates}\n//                 />\n//               )}\n//             </div>\n//             <div className=\"lsItem\">\n//               <label>Options</label>\n//               <div className=\"lsOptions\">\n//                 <div className=\"lsOptionItem\">\n//                   <span className=\"lsOptionText\">\n//                     Min price <small>per night</small>\n//                   </span>\n//                   <input\n//                     type=\"number\"\n//                     onChange={(e) => setMin(e.target.value)}\n//                     className=\"lsOptionInput\"\n//                   />\n//                 </div>\n//                 <div className=\"lsOptionItem\">\n//                   <span className=\"lsOptionText\">\n//                     Max price <small>per night</small>\n//                   </span>\n//                   <input\n//                     type=\"number\"\n//                     onChange={(e) => setMax(e.target.value)}\n//                     className=\"lsOptionInput\"\n//                   />\n//                 </div>\n//                 <div className=\"lsOptionItem\">\n//                   <span className=\"lsOptionText\">Adult</span>\n//                   <input\n//                     type=\"number\"\n//                     min={1}\n//                     className=\"lsOptionInput\"\n//                     placeholder={options.adult}\n//                   />\n//                 </div>\n//                 <div className=\"lsOptionItem\">\n//                   <span className=\"lsOptionText\">Children</span>\n//                   <input\n//                     type=\"number\"\n//                     min={0}\n//                     className=\"lsOptionInput\"\n//                     placeholder={options.children}\n//                   />\n//                 </div>\n//                 <div className=\"lsOptionItem\">\n//                   <span className=\"lsOptionText\">Table</span>\n//                   <input\n//                     type=\"number\"\n//                     min={1}\n//                     className=\"lsOptionInput\"\n//                     placeholder={options.table}\n//                   />\n//                 </div>\n//               </div>\n//             </div>\n//             <button onClick={handleClick}>Search</button>\n//           </div>\n//           <div className=\"listResult\">\n//             {loading ? (\n//               \"loading\"\n//             ) : (\n//               <>\n//                 {data.map((item) => (\n//                   <SearchItem item={item} key={item._id} />\n//                 ))}\n//               </>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default List;\n\n// import \"./List.css\";\n// import Navbar from \"../../components/navbar/Navbar\";\n// import Header from \"../../components/header/Header\";\n// import { useLocation } from \"react-router-dom\";\n// import { useState } from \"react\";\n// import { format } from \"date-fns\";\n// import { DateRange } from \"react-date-range\";\n// import SearchItem from \"../../components/searchItem/SearchItem\";\n\n// const List = () => {\n//   const location = useLocation();\n//   const [destination, setDestination] = useState(location.state.destination);\n//   const [date, setDate] = useState(location.state.date);\n//   const [openDate, setOpenDate] = useState(false);\n//   const [options, setOptions] = useState(location.state.options);\n\n//   // const [min, setMin] = useState(undefined);\n//   // const [max, setMax] = useState(undefined);\n\n//   const { data, loading, error, reFetch } = useFetch( `/spaces?type=${destination}&min=${min || 0 }&max=${max || 999}`);\n\n//   // const handleClick = () => {\n//   //   reFetch();\n//   // };\n\n//   return (\n\n//     <div>\n//       <Navbar />\n//       <Header type=\"list\" />\n//       <div className=\"listContainer\">\n//         <div className=\"listWrapper\">\n//           <div className=\"listSearch\">\n//             <h1 className=\"lsTitle\">Search</h1>\n//             <div className=\"lsItem\">\n//               <label>Destination</label>\n//               <input placeholder={destination} type=\"text\" />\n\n//             </div>\n//             <div className=\"lsItem\">\n//               <label>Check-in Date</label>\n//               <span onClick={() => setOpenDate(!openDate)}>{`${format(\n//                 date[0].startDate,\n//                 \"MM/dd/yyyy\"\n//               )} to ${format(date[0].endDate, \"MM/dd/yyyy\")}`}</span>\n//               {openDate && (\n//                 <DateRange\n//                   onChange={(item) => setDate([item.selection])}\n//                   minDate={new Date()}\n//                   ranges={date}\n//                 />\n//               )}\n\n//             </div>\n//             <div className=\"lsItem\">\n//               <label>Options</label>\n//               <div className=\"lsOptions\">\n//                 <div className=\"lsOptionItem\">\n//                   <span className=\"lsOptionText\">\n//                     Min price <small>per night</small>\n//                   </span>\n//                   <input type=\"number\" className=\"lsOptionInput\" />\n//                 </div>\n\n//                 <div className=\"lsOptionItem\">\n//                   <span className=\"lsOptionText\">\n//                     Max price <small>per night</small>\n//                   </span>\n//                   <input type=\"number\" className=\"lsOptionInput\" />\n//                 </div>\n\n//                 <div className=\"lsOptionItem\">\n//                   <span className=\"lsOptionText\">Adult</span>\n//                   <input\n//                     type=\"number\"\n//                     min={1}\n//                     className=\"lsOptionInput\"\n//                     placeholder={options.adult}\n//                   />\n//                 </div>\n\n//                 <div className=\"lsOptionItem\">\n//                   <span className=\"lsOptionText\">Children</span>\n//                   <input\n//                     type=\"number\"\n//                     min={0}\n//                     className=\"lsOptionInput\"\n//                     placeholder={options.children}\n//                   />\n//                 </div>\n\n//                 <div className=\"lsOptionItem\">\n//                   <span className=\"lsOptionText\">Room</span>\n//                   <input\n//                     type=\"number\"\n//                     min={1}\n//                     className=\"lsOptionInput\"\n//                     placeholder={options.room}\n//                   />\n//                 </div>\n//               </div>\n//             </div>\n//             <button>Search</button>\n//           </div>\n//           <div className=\"listResult\">\n//             <SearchItem />\n//             {loading ? (\n//               \"loading\"\n//             ) : (\n//               <>\n//                 {data.map((item) => (\n//                   <SearchItem item={item} key={item._id} />\n//                 ))}\n//               </>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default List;","map":{"version":3,"names":[],"sources":["C:/Users/eyala/OneDrive/Desktop/iot-booking-elaco/client/src/pages/list/List.jsx"],"sourcesContent":["\r\n\r\n\r\n\r\n// import \"./List.css\";\r\n// import Navbar from \"../../components/navbar/Navbar\";\r\n// import Header from \"../../components/header/Header\";\r\n// import { useLocation } from \"react-router-dom\";\r\n// import { useState } from \"react\";\r\n// import { format } from \"date-fns\";\r\n// import { DateRange } from \"react-date-range\";\r\n// import SearchItem from \"../../components/searchItem/SearchItem\";\r\n// import useFetch from \"../../hooks/useFetch\";\r\n\r\n// const List = () => {\r\n//   const location = useLocation();\r\n//   const [destination, setDestination] = useState(location.state.destination);\r\n//   const [dates, setDates] = useState(location.state.dates);\r\n//   const [openDate, setOpenDate] = useState(false);\r\n//   const [options, setOptions] = useState(location.state.options);\r\n//   const [min, setMin] = useState(undefined);\r\n//   const [max, setMax] = useState(undefined);\r\n\r\n//   const { data, loading, error, reFetch } = useFetch(\r\n//     `/spaces?type=${destination}&min=${min || 1}&max=${max || 200}`\r\n//   );\r\n\r\n//   const handleClick = () => {\r\n//     reFetch();\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Navbar />\r\n//       <Header type=\"list\" />\r\n//       <div className=\"listContainer\">\r\n//         <div className=\"listWrapper\">\r\n//           <div className=\"listSearch\">\r\n//             <h1 className=\"lsTitle\">Search</h1>\r\n//             <div className=\"lsItem\">\r\n//               <label>Destination</label>\r\n//               <input placeholder={destination} type=\"text\" />\r\n//             </div>\r\n//             <div className=\"lsItem\">\r\n//               <label>Check-in Date</label>\r\n//               <span onClick={() => setOpenDate(!openDate)}>{`${format(\r\n//                 dates[0].startDate,\r\n//                 \"MM/dd/yyyy\"\r\n//               )} to ${format(dates[0].endDate, \"MM/dd/yyyy\")}`}</span>\r\n//               {openDate && (\r\n//                 <DateRange\r\n//                   onChange={(item) => setDates([item.selection])}\r\n//                   minDate={new Date()}\r\n//                   ranges={dates}\r\n//                 />\r\n//               )}\r\n//             </div>\r\n//             <div className=\"lsItem\">\r\n//               <label>Options</label>\r\n//               <div className=\"lsOptions\">\r\n//                 <div className=\"lsOptionItem\">\r\n//                   <span className=\"lsOptionText\">\r\n//                     Min price <small>per night</small>\r\n//                   </span>\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     onChange={(e) => setMin(e.target.value)}\r\n//                     className=\"lsOptionInput\"\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"lsOptionItem\">\r\n//                   <span className=\"lsOptionText\">\r\n//                     Max price <small>per night</small>\r\n//                   </span>\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     onChange={(e) => setMax(e.target.value)}\r\n//                     className=\"lsOptionInput\"\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"lsOptionItem\">\r\n//                   <span className=\"lsOptionText\">Adult</span>\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     min={1}\r\n//                     className=\"lsOptionInput\"\r\n//                     placeholder={options.adult}\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"lsOptionItem\">\r\n//                   <span className=\"lsOptionText\">Children</span>\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     min={0}\r\n//                     className=\"lsOptionInput\"\r\n//                     placeholder={options.children}\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"lsOptionItem\">\r\n//                   <span className=\"lsOptionText\">Table</span>\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     min={1}\r\n//                     className=\"lsOptionInput\"\r\n//                     placeholder={options.table}\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <button onClick={handleClick}>Search</button>\r\n//           </div>\r\n//           <div className=\"listResult\">\r\n//             {loading ? (\r\n//               \"loading\"\r\n//             ) : (\r\n//               <>\r\n//                 {data.map((item) => (\r\n//                   <SearchItem item={item} key={item._id} />\r\n//                 ))}\r\n//               </>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default List;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import \"./List.css\";\r\n// import Navbar from \"../../components/navbar/Navbar\";\r\n// import Header from \"../../components/header/Header\";\r\n// import { useLocation } from \"react-router-dom\";\r\n// import { useState } from \"react\";\r\n// import { format } from \"date-fns\";\r\n// import { DateRange } from \"react-date-range\";\r\n// import SearchItem from \"../../components/searchItem/SearchItem\";\r\n\r\n// const List = () => {\r\n//   const location = useLocation();\r\n//   const [destination, setDestination] = useState(location.state.destination);\r\n//   const [date, setDate] = useState(location.state.date);\r\n//   const [openDate, setOpenDate] = useState(false);\r\n//   const [options, setOptions] = useState(location.state.options);\r\n\r\n\r\n//   // const [min, setMin] = useState(undefined);\r\n//   // const [max, setMax] = useState(undefined);\r\n\r\n//   const { data, loading, error, reFetch } = useFetch( `/spaces?type=${destination}&min=${min || 0 }&max=${max || 999}`);\r\n\r\n//   // const handleClick = () => {\r\n//   //   reFetch();\r\n//   // };\r\n\r\n//   return (\r\n\r\n//     <div>\r\n//       <Navbar />\r\n//       <Header type=\"list\" />\r\n//       <div className=\"listContainer\">\r\n//         <div className=\"listWrapper\">\r\n//           <div className=\"listSearch\">\r\n//             <h1 className=\"lsTitle\">Search</h1>\r\n//             <div className=\"lsItem\">\r\n//               <label>Destination</label>\r\n//               <input placeholder={destination} type=\"text\" />\r\n\r\n//             </div>\r\n//             <div className=\"lsItem\">\r\n//               <label>Check-in Date</label>\r\n//               <span onClick={() => setOpenDate(!openDate)}>{`${format(\r\n//                 date[0].startDate,\r\n//                 \"MM/dd/yyyy\"\r\n//               )} to ${format(date[0].endDate, \"MM/dd/yyyy\")}`}</span>\r\n//               {openDate && (\r\n//                 <DateRange\r\n//                   onChange={(item) => setDate([item.selection])}\r\n//                   minDate={new Date()}\r\n//                   ranges={date}\r\n//                 />\r\n//               )}\r\n\r\n//             </div>\r\n//             <div className=\"lsItem\">\r\n//               <label>Options</label>\r\n//               <div className=\"lsOptions\">\r\n//                 <div className=\"lsOptionItem\">\r\n//                   <span className=\"lsOptionText\">\r\n//                     Min price <small>per night</small>\r\n//                   </span>\r\n//                   <input type=\"number\" className=\"lsOptionInput\" />\r\n//                 </div>\r\n\r\n//                 <div className=\"lsOptionItem\">\r\n//                   <span className=\"lsOptionText\">\r\n//                     Max price <small>per night</small>\r\n//                   </span>\r\n//                   <input type=\"number\" className=\"lsOptionInput\" />\r\n//                 </div>\r\n\r\n//                 <div className=\"lsOptionItem\">\r\n//                   <span className=\"lsOptionText\">Adult</span>\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     min={1}\r\n//                     className=\"lsOptionInput\"\r\n//                     placeholder={options.adult}\r\n//                   />\r\n//                 </div>\r\n\r\n//                 <div className=\"lsOptionItem\">\r\n//                   <span className=\"lsOptionText\">Children</span>\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     min={0}\r\n//                     className=\"lsOptionInput\"\r\n//                     placeholder={options.children}\r\n//                   />\r\n//                 </div>\r\n\r\n//                 <div className=\"lsOptionItem\">\r\n//                   <span className=\"lsOptionText\">Room</span>\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     min={1}\r\n//                     className=\"lsOptionInput\"\r\n//                     placeholder={options.room}\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <button>Search</button>\r\n//           </div>\r\n//           <div className=\"listResult\">\r\n//             <SearchItem />\r\n//             {loading ? (\r\n//               \"loading\"\r\n//             ) : (\r\n//               <>\r\n//                 {data.map((item) => (\r\n//                   <SearchItem item={item} key={item._id} />\r\n//                 ))}\r\n//               </>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default List;"],"mappingskBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}