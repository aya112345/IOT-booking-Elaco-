{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eyala\\\\OneDrive\\\\Desktop\\\\iot-booking-elaco\\\\client\\\\src\\\\pages\\\\PaymentForm\\\\PaymentForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport './PaymentForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handlePaymentSubmission = async paymentMethod => {\n    try {\n      // Call your backend server to create a payment intent\n      const response = await fetch('/create-payment-intent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          paymentMethodId: paymentMethod.id\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create payment intent');\n      }\n      const {\n        clientSecret\n      } = await response.json();\n\n      // Confirm the payment intent using Stripe.js\n      const result = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: paymentMethod.id\n      });\n      if (result.error) {\n        throw new Error(result.error.message);\n      }\n\n      // Payment successful\n      console.log('Payment successful:', result.paymentIntent);\n      // Redirect to a success page or show a success message to the user\n    } catch (error) {\n      // Handle error\n      console.error('Payment failed:', error.message);\n      // Show error message to the user\n      setError(error.message);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    setLoading(true);\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    setLoading(false);\n    if (error) {\n      setError(error.message);\n    } else {\n      setError(null);\n      handlePaymentSubmission(paymentMethod);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"card-element\",\n          children: \"Credit or debit card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"card-element\",\n          className: \"card-element\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: {\n              style: cardElementStyle\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !stripe || loading,\n        children: loading ? 'Processing...' : 'Pay'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentForm, \"UBK5pRmeIOwCJb7VBFJPKfTjZr8=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = PaymentForm;\nconst cardElementStyle = {\n  base: {\n    fontSize: '16px',\n    color: '#32325d',\n    fontFamily: '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, sans-serif',\n    '::placeholder': {\n      color: '#aab7c4'\n    }\n  },\n  invalid: {\n    color: '#fa755a'\n  }\n};\nexport default PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["React","useState","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","PaymentForm","_s","stripe","elements","error","setError","loading","setLoading","handlePaymentSubmission","paymentMethod","response","fetch","method","headers","body","JSON","stringify","paymentMethodId","id","ok","Error","clientSecret","json","result","confirmCardPayment","payment_method","message","console","log","paymentIntent","handleSubmit","event","preventDefault","createPaymentMethod","type","card","getElement","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","options","style","cardElementStyle","disabled","_c","base","fontSize","color","fontFamily","invalid","$RefreshReg$"],"sources":["C:/Users/eyala/OneDrive/Desktop/iot-booking-elaco/client/src/pages/PaymentForm/PaymentForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport './PaymentForm.css';\r\n\r\nconst PaymentForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handlePaymentSubmission = async (paymentMethod) => {\r\n    try {\r\n      // Call your backend server to create a payment intent\r\n      const response = await fetch('/create-payment-intent', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          paymentMethodId: paymentMethod.id,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to create payment intent');\r\n      }\r\n\r\n      const { clientSecret } = await response.json();\r\n\r\n      // Confirm the payment intent using Stripe.js\r\n      const result = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: paymentMethod.id,\r\n      });\r\n\r\n      if (result.error) {\r\n        throw new Error(result.error.message);\r\n      }\r\n\r\n      // Payment successful\r\n      console.log('Payment successful:', result.paymentIntent);\r\n      // Redirect to a success page or show a success message to the user\r\n    } catch (error) {\r\n      // Handle error\r\n      console.error('Payment failed:', error.message);\r\n      // Show error message to the user\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n    });\r\n\r\n    setLoading(false);\r\n\r\n    if (error) {\r\n      setError(error.message);\r\n    } else {\r\n      setError(null);\r\n      handlePaymentSubmission(paymentMethod);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"card-element\">Credit or debit card</label>\r\n          <div id=\"card-element\" className=\"card-element\">\r\n            <CardElement options={{ style: cardElementStyle }} />\r\n          </div>\r\n          {error && <div className=\"error\">{error}</div>}\r\n        </div>\r\n        <button type=\"submit\" disabled={!stripe || loading}>\r\n          {loading ? 'Processing...' : 'Pay'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst cardElementStyle = {\r\n  base: {\r\n    fontSize: '16px',\r\n    color: '#32325d',\r\n    fontFamily:\r\n      '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, sans-serif',\r\n    '::placeholder': {\r\n      color: '#aab7c4',\r\n    },\r\n  },\r\n  invalid: {\r\n    color: '#fa755a',\r\n  },\r\n};\r\n\r\nexport default PaymentForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}